%YAML 1.2
---
name: hledger
file_extensions:
  - hledger
  - journal
scope: source.hledger
version: 2

variables:
  # There are three date formats:
  #  - YYYY-MM-DD
  #  - YYYY/MM/DD
  #  - YYYY.MM.DD
  # The year is optional
  date_dash: '(?:\d{4}-)?\d{1,2}-\d{1,2}'
  date_slash: '(?:\d{4}/)?\d{1,2}/\d{1,2}'
  date_dot: '(?:\d{4}.)?\d{1,2}.\d{1,2}'

  double_sep: '(?:  |\t)(?: |\t)*'

  amount_dot: '(?:-\s*)?\d{1,3}(?:\.\d{3})*(?:,\d*)?'
  amount_comma: '(?:-\s*)?\d{1,3}(?:,\d{3})*(?:\.\d*)?'
  amount_space: '(?:-\s*)?\d{1,3}(?: \d{3})*(?:[,\.]\d*)?'
  amount_no_sep: '(?:-\s*)?\d+(?:[,\.]\d*)?'
  amount_sci: '(?:-\s*)?\d+(?:[,\.]\d*)?[Ee]\d+'

contexts:
  main:
    - include: transaction
    - include: declaration
    - include: directive
    - include: file-comment

  ###
  # General purpose contexts
  ###

  # pop at next non-whitespace of end of line
  bail-out:
    - match: (?=\S|$)
      pop: true
  # pop at end of line
  pop-at-eol:
    - match: $\n?
      pop: true

  # comment at end of line without tags
  eol-comment:
    - match: ;
      scope: punctuation.definition.comment.begin.hledger
      push:
        - meta_scope: comment.line.semi-colon.hledger
        - include: pop-at-eol

  # transaction header; starts with a date in column 0
  transaction:
    - match: '^(?={{date_dash}}|{{date_slash}}|{{date_dot}})'
      push:
        # parses the transaction from the beginning of the line
        # other parts pop back to here, so when we see $, the line is done
        # and we expect postings at the next lines
        - meta_content_scope: meta.transaction.hledger
        - match: $\n?
          set: posting-line
        - match: ''
          push:
            - comment-with-tags
            - transaction-description
            - transaction-code
            - transaction-status
            - transaction-date

  # declarations
  declaration:
    - match: '^(?=account\b)'
      push:
        - meta_scope: meta.declaration.account.hledger
        - include: account-decl
        - include: pop-at-eol
    - match: '^(?=(?:payee|commodity|D|tag)\b)'
      push:
        - meta_scope: meta.declaration.hledger
        - include: other-decl
        - include: pop-at-eol

  # directives
  directive:
    - match: ^(?=(?:P|include|alias|apply account)\b|Y\d{4})
      push:
        - meta_scope: meta.directive.hledger
        - match: '^include\b'
          scope: keyword.import.hledger
          push:
            - match: .*$
              scope: string.other.hledger
              pop: true
        - match: ^(Y)(\d{4})
          captures:
            1: keyword.declaration.year.hledger
            2: string.other.date.hledger
          push:
            - include: eol-comment
            - include: bail-out
        - match: '^P\b'
          scope: keyword.declaration.price.hledger
          push:
            - match: '(?:{{date_dash}}|{{date_slash}}|{{date_dot}})'
              scope: string.other.date.hledger
              set:
                - include: highlight-commodity
                - include: highlight-amount
                - include: eol-comment
                - include: bail-out
            - include: bail-out
        - include: bail-out

  # file comments
  file-comment:
    - match: '^(?=\s*[;#*]|comment)'
      push:
        - meta_scope: meta.comment.hledger
        - match: ^\s*[;#*]
          scope: punctuation.definition.comment.begin.hledger
          push:
            - meta_scope: comment.line.semi-colon.hledger
            - match: $
              pop: 2
        - match: '^comment$'
          push:
            - meta_scope: comment.block.hledger
            - match: ^end comment$
              pop: 2


  transaction-date:
    - match: '(?:{{date_dash}}|{{date_slash}}|{{date_dot}})'
      scope: string.other.date.hledger
    - match: '='
      scope: keyword.operator.hledger
    - include: bail-out

  transaction-status:
    - match: '[\*\!]'
      scope: keyword.operator.hledger
    - include: bail-out

  transaction-code:
    - match: \(
      scope: punctuation.definition.annotation.begin.hledger
      push:
        - meta_scope: variable.annotation.hledger
        - match: \)
          scope: punctuation.definition.annotation.end.hledger
          pop: true
        - include: pop-at-eol
    - include: bail-out

  transaction-description:
    - match: '([^\|;\n]*?)\s*'
      captures:
        1: meta.transaction.payee.hledger variable.payee.hledger
    - match: (\|)\s*([^;\n]*?)\s*(?=;|$)
      captures:
        1: punctuation.separator.sequence.hledger
        2: meta.transaction.note.hledger string.unquoted.hledger
    - include: bail-out

  comment-with-tags:
    - match: ;
      scope: punctuation.definition.comment.begin.hledger
      push:
        - meta_scope: comment.line.semi-colon.hledger
        - match: '([^ :]+)(:)'
          captures:
            1: meta.tag.hledger entity.name.tag.hledger
            2: punctuation.separator.key-value.hledger
          push:
            - meta_content_scope: meta.tag.value.hledger string.other.hledger
            - match: ','
              scope: punctuation.definition.generic.end.hledger
              pop: true
            - include: pop-at-eol
        - include: pop-at-eol
    - include: pop-at-eol

  posting-line:
    - meta_content_scope: meta.transaction.posting.hledger
    - match: ^(?!  |\t)
      pop: true
    - match: '(?:  |\t)\s*'
      push:
        - comment-with-tags
        - posting-amount
        - posting-account
        - posting-status

  posting-status:
    - match: '[\*\!]'
      scope: keyword.operator.hledger
    - include: bail-out

  posting-account:
    - meta_content_scope: meta.posting.account.hledger
    - match: '([^: ]| (?! )+)(:)?'
      captures:
        1: variable.account.hledger
        2: punctuation.separator.sequence.hledger
    - match: '(?=  |\t)'
      pop: true
    - include: bail-out

  posting-amount:
    - match: '@'
      scope: keyword.operator.arithmetic.hledger
    - match: '=|\*'
      scope: keyword.operator.assignment.hledger
    - include: highlight-commodity
    - include: highlight-amount
    - include: bail-out

  highlight-amount:
    - match: '(?:{{amount_sci}}|{{amount_dot}}|{{amount_comma}}|{{amount_space}}|{{amount_no_sep}})'
      scope: constant.numeric.value.hledger

  highlight-commodity:
    - match: '(?:-\s*)?[â‚¬$]*'
      scope: constant.numeric.hledger
    - match: '[A-Za-z]*'
      scope: string.other.commodity.hledger
    - match: '"'
      scope: punctuation.definition.generic.begin.hledger
      push:
        - meta_scope: string.other.commodity.hledger
        - match: '"'
          scope: punctuation.definition.generic.end.hledger
          pop: true
        - include: pop-at-eol

  account-decl:
    - match: ^account\b
      scope: keyword.declaration.account.hledger
    - match: $\n?
      push:
        - match: ^(?!  |\t)
          pop: 2
        - match: \s*
        - include: comment-with-tags
        - match: .*$
          scope: comment.line.hledger

    - include: comment-with-tags
    - match: \s*((?:[^\n\t ]| (?! ))*)\s*
      captures:
        1: meta.index.account.hledger entity.name.account.hledger

  other-decl:
    - match: ^payee\b
      scope: keyword.declaration.payee.hledger
      push:
        - match: '\s*([^;]*)\s*'
          captures:
            1: meta.index.payee.hledger entity.name.payee.hledger
        - include: eol-comment
        - include: pop-at-eol
    - match: ^tag\b
      scope: keyword.declaration.tag.hledger
      push:
        - match: '\s*([^;]*)\s*'
          captures:
            1: meta.index.tag.hledger entity.name.htag.hledger
        - include: eol-comment
        - include: pop-at-eol
    - match: ^(?:commodity|D)\b
      scope: keyword.declaration.commodity.hledger
      push:
        - include: highlight-amount
        - include: highlight-commodity
        - include: eol-comment
        - include: bail-out
    - match: ^(decimal-mark)\b\s*([,\.])
      captures:
        1: keyword.declaration.decimal-mark.hledger
        2: punctuation.definition.keyword.hledger
