%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: hledger
file_extensions:
  - hledger
  - journal
scope: source.hledger
version: 2

variables:
  double_separator: '(?:(?: {2}|\t)(?: |\t)*)'
  simple_date: '(?:(\d{4})([-/\.]))?(\d{1,2})([-/\.])(\d{1,2})'

contexts:
  end-of-line-comment:
    - match: '{{double_separator}}(;)'
      captures:
        1: punctuation.definition.comment.hledger
      push:
        - meta_scope: comment.line.semi-colon.hledger
        - include: pop-at-end-of-line

  bail-out:
    - match: '(?=\S)'
      pop: true

  pop-at-end-of-line:
    - match: '$\n?'
      pop: true

  date:
    - match: '{{simple_date}}'
      captures:
        1: constant.numeric.hledger
        2: punctuation.separator.hledger
        3: constant.numeric.hledger
        4: punctuation.separator.hledger
        5: constant.numeric.hledger

  main:
    - match: '(?=^{{simple_date}})'
      push: transaction-date

  transaction-date:
    - include: date
    - match: '='
      scope: punctuation.separator.hledger
      push:
        - match: '{{simple_date}}'
          captures:
            1: constant.numeric.hledger
            2: punctuation.separator.hledger
            3: constant.numeric.hledger
            4: punctuation.separator.hledger
            5: constant.numeric.hledger
          pop: true
        - match: '.*$'
          scope: invalid.illegal.hledger
          pop: true
    - match: '(?=\S)'
      set: transaction-status
    - match: '$\n?'
      scope: meta.expect.after-date.hledger
      pop: true

  transaction-status:
    - match: '[\*\!]'
      scope: keyword.operator.hledger
      push:
        - match: '\s*[\*\!].*$'
          scope: invalid.illegal.hledger
          pop: 2
        - match: ''
          pop: true
    - match: '(?=\S)'
      set: transaction-code
    - match: '\s+$\n?'
      scope: invalid.illegal.hledger meta.expect.after-status.hledger
      pop: true

  transaction-code:
    - match: '\('
      scope: punctuation.definition.annotation.begin.hledger
      set: transaction-code-2
    - match: '(?=\S)'
      set: transaction-payee

  transaction-code-2:
    - match: '[^\)]*$'
      scope: invalid.illegal.hledger meta.expect.transaction-code.hledger
      pop: true
    - match: '(.*?)(\))'
      scope: meta.expect.transaction-code.hledger
      captures:
        1: variable.annotation.hledger meta.index.transaction.code.hledger
        2: punctuation.definition.annotation.end.hledger
      set: transaction-code-3

  transaction-code-3:
    - match: '\(.*$'
      scope: invalid.illegal.hledger
      pop: true
    - match: '(?=\S)'
      set: transaction-payee
    - match: '\s*$\n?'
      scope: invalid.illegal.hledger meta.expect.payee.hledger
      pop: true

  bail-out-to-posting:
    - match: '$'
      set: posting

  bail-out-to-transaction-comment:
    - match: '(?=;)'
      set: transaction-comment

  transaction-payee:
    - match: '\s*'
    - match: '\w[^\|;\n]*'
      scope: entity.name.hledger meta.index.transaction.payee.hledger
      set: transaction-payee-2
    - match: '\|$\n?'
      scope: invalid.illegal.hledger
      pop: true

  transaction-payee-2:
    - match: '\|'
      scope: punctuation.separator.hledger meta.expect.transaction-note.hledger
      set: transaction-note

    - include: bail-out-to-transaction-comment
    - include: bail-out-to-posting

  transaction-note:
    - match: '\W*(;.*)?$'
      scope: invalid.illegal.hledger meta.expect.transaction-note.hledger
      pop: true
    - match: '[^;]+'
      scope: entity.name.hledger meta.index.transaction.note.hledger
      set: transaction-note-2

  transaction-note-2:
    - include: bail-out-to-transaction-comment
    - include: bail-out-to-posting

  comment-with-tags:
    - meta_scope: comment.line.semi-colon.hledger
    - match: '(date2?)(:)'
      captures:
        1: keyword.other.hledger
        2: punctuation.separator.key-value.hledger
      push:
        - include: date
        - include: bail-out
        - match: '$'
          pop: 2
    - match: '(\S+)(:)(\S+)?'
      captures:
        1: entity.name.hledger meta.index.transaction.tag.hledger
        2: punctuation.separator.key-value.hledger
        3: variable.parameter.hledger meta.index.transaction.tag-value.hledger
    - match: '$'
      pop: true

  transaction-comment:
    - match: ';'
      scope: punctuation.definition.comment.begin.hledger
      push: comment-with-tags

    - include: bail-out-to-posting

  posting:
    - match: '^(?! |\t)'
      pop: true
    - match: '[ \t]+'
      set: posting-status

  posting-status:
    - match: '[\*\!]'
      scope: keyword.operator.hledger
      push:
        - match: '\s*[\*\!].*$'
          scope: invalid.illegal.hledger
          pop: true
        - match: ''
          pop: true
    - match: '(?=\S)'
      set: posting-account
    - match: '\s*$\n?'
      scope: invalid.illegal.hledger meta.expect.after-posting-status.hledger
      set: posting

  bail-out-to-posting-comment:
    - match: '(?=;)'
      set: posting-comment

  posting-comment:
    - match: ';'
      scope: punctuation.definition.comment.begin.hledger
      push: comment-with-tags

    - include: bail-out-to-posting

  posting-account:
    - match: ';.*$'
      scope: invalid.illegal.hledger
      set: posting
    - match: ''
      set: posting-account-2

  posting-account-2:
    - meta_content_scope: meta.index.posting.account.hledger
    - match: '((?:[^:\t\n ]| (?! ))*)(:)?'
      captures:
        1: variable.parameter.hledger
        2: punctuation.separator.sequence.hledger

    - match: '{{double_separator}}'
      set: posting-account-3

    - include: bail-out-to-posting-comment
    - include: bail-out-to-posting

  posting-account-3:
    - meta_content_scope: meta.posting.amount.hledger
    - match: '(-)?(\d{1,3})([,.])?'
      captures:
        1: punctuation.separator.decimal.hledger
        2: constant.numeric.value.hledger
        3: punctuation.separator.decimal.hledger
    - match: '@'
      scope: keyword.operator.arithmetic.hledger
    - match: '='
      scope: keyword.operator.assignment.hledger
    - match: '[â‚¬\$]'
      scope: text.hledger
    - match: '[a-zA-Z]+'
      scope: text.hledger
    - match: '"'
      scope: punctuation.definition.string.begin.hledger
      push:
        - meta_scope: text.hledger
        - match: '[^"]*$'
          scope: invalid.illegal.hledger
          pop: true
        - match: '"'
          scope: punctuation.definition.string.end.hledger
          pop: true

    - include: bail-out-to-posting-comment
    - include: bail-out-to-posting




